// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Modal /> renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CommonModal
    onHide={[MockFunction]}
    show={true}
    title="Header"
  >
    <div>
      Content
    </div>
  </CommonModal>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "aria-labelledby": "movie-details",
      "centered": true,
      "children": Array [
        <ForwardRef(Bootstrap(ModalHeader))
          className="align-items-center"
        >
          <ForwardRef(Bootstrap(ModalTitle))
            id="movie-details"
          >
            Header
          </ForwardRef(Bootstrap(ModalTitle))>
          <Button
            aria={Object {}}
            click={[MockFunction]}
            label="Close"
          />
        </ForwardRef(Bootstrap(ModalHeader))>,
        <ForwardRef(Bootstrap(ModalBody))>
          <div>
            Content
          </div>
        </ForwardRef(Bootstrap(ModalBody))>,
      ],
      "className": "movie-modal",
      "onHide": [MockFunction],
      "show": true,
      "size": "lg",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <ForwardRef(Bootstrap(ModalTitle))
              id="movie-details"
            >
              Header
            </ForwardRef(Bootstrap(ModalTitle))>,
            <Button
              aria={Object {}}
              click={[MockFunction]}
              label="Close"
            />,
          ],
          "className": "align-items-center",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Header",
              "id": "movie-details",
            },
            "ref": null,
            "rendered": "Header",
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": undefined,
              "propTypes": undefined,
              "render": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "aria": Object {},
              "click": [MockFunction],
              "label": "Close",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": undefined,
          "propTypes": undefined,
          "render": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <div>
            Content
          </div>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Content",
          },
          "ref": null,
          "rendered": "Content",
          "type": "div",
        },
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": undefined,
          "propTypes": undefined,
          "render": [Function],
        },
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "BACKDROP_TRANSITION_DURATION": 150,
      "Body": Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": undefined,
        "propTypes": undefined,
        "render": [Function],
      },
      "Dialog": Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": undefined,
        "propTypes": undefined,
        "render": [Function],
      },
      "Footer": Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": undefined,
        "propTypes": undefined,
        "render": [Function],
      },
      "Header": Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": undefined,
        "propTypes": undefined,
        "render": [Function],
      },
      "TRANSITION_DURATION": 300,
      "Title": Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": undefined,
        "propTypes": undefined,
        "render": [Function],
      },
      "defaultProps": undefined,
      "propTypes": undefined,
      "render": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "aria-labelledby": "movie-details",
        "centered": true,
        "children": Array [
          <ForwardRef(Bootstrap(ModalHeader))
            className="align-items-center"
          >
            <ForwardRef(Bootstrap(ModalTitle))
              id="movie-details"
            >
              Header
            </ForwardRef(Bootstrap(ModalTitle))>
            <Button
              aria={Object {}}
              click={[MockFunction]}
              label="Close"
            />
          </ForwardRef(Bootstrap(ModalHeader))>,
          <ForwardRef(Bootstrap(ModalBody))>
            <div>
              Content
            </div>
          </ForwardRef(Bootstrap(ModalBody))>,
        ],
        "className": "movie-modal",
        "onHide": [MockFunction],
        "show": true,
        "size": "lg",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <ForwardRef(Bootstrap(ModalTitle))
                id="movie-details"
              >
                Header
              </ForwardRef(Bootstrap(ModalTitle))>,
              <Button
                aria={Object {}}
                click={[MockFunction]}
                label="Close"
              />,
            ],
            "className": "align-items-center",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Header",
                "id": "movie-details",
              },
              "ref": null,
              "rendered": "Header",
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "defaultProps": undefined,
                "propTypes": undefined,
                "render": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "aria": Object {},
                "click": [MockFunction],
                "label": "Close",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": undefined,
            "propTypes": undefined,
            "render": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <div>
              Content
            </div>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Content",
            },
            "ref": null,
            "rendered": "Content",
            "type": "div",
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": undefined,
            "propTypes": undefined,
            "render": [Function],
          },
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "BACKDROP_TRANSITION_DURATION": 150,
        "Body": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": undefined,
          "propTypes": undefined,
          "render": [Function],
        },
        "Dialog": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": undefined,
          "propTypes": undefined,
          "render": [Function],
        },
        "Footer": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": undefined,
          "propTypes": undefined,
          "render": [Function],
        },
        "Header": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": undefined,
          "propTypes": undefined,
          "render": [Function],
        },
        "TRANSITION_DURATION": 300,
        "Title": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": undefined,
          "propTypes": undefined,
          "render": [Function],
        },
        "defaultProps": undefined,
        "propTypes": undefined,
        "render": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
