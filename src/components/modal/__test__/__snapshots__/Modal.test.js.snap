// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Modal /> renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MovieModal
    movie={Object {}}
    onHide={[MockFunction]}
    show={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "aria-labelledby": "movie-details",
      "centered": true,
      "children": Array [
        <ForwardRef(Bootstrap(ModalHeader))>
          <ForwardRef(Bootstrap(ModalTitle))
            id="movie-details"
          />
          <Button
            click={[MockFunction]}
            label="Close"
          />
        </ForwardRef(Bootstrap(ModalHeader))>,
        <ForwardRef(Bootstrap(ModalBody))>
          <ForwardRef(Bootstrap(Row))>
            <ForwardRef(Bootstrap(Col))
              lg={4}
              sm={true}
            >
              <Poster
                click={[Function]}
                id={0}
                name="movie"
                url="undefined"
              />
            </ForwardRef(Bootstrap(Col))>
            <ForwardRef(Bootstrap(Col))
              lg={8}
              sm={true}
            >
              <ForwardRef(Bootstrap(Row))>
                <ForwardRef(Bootstrap(Col))
                  md={12}
                >
                  <p
                    className="h6 text-primary"
                  >
                    Overview
                  </p>
                  <p
                    className="mb-0"
                  >
                    <em />
                  </p>
                </ForwardRef(Bootstrap(Col))>
              </ForwardRef(Bootstrap(Row))>
              <div
                className="dropdown-divider"
              />
              <dl
                className="row movie-modal__summary--list"
              >
                <dt
                  className="col-sm-3 text-primary"
                >
                  Tagline
                </dt>
                <dd
                  className="col-sm-9"
                >
                  Not available
                </dd>
                <dt
                  className="col-sm-3 text-primary"
                >
                  Rating
                </dt>
                <dd
                  className="col-sm-9"
                />
                <dt
                  className="col-sm-3 text-primary"
                >
                  Status
                </dt>
                <dd
                  className="col-sm-9"
                />
                <dt
                  className="col-sm-3 text-primary"
                >
                  Release Date
                </dt>
                <dd
                  className="col-sm-9"
                />
                <dt
                  className="col-sm-3 text-primary"
                >
                  Language
                </dt>
                <dd
                  className="col-sm-9 text-uppercase"
                />
              </dl>
            </ForwardRef(Bootstrap(Col))>
          </ForwardRef(Bootstrap(Row))>
        </ForwardRef(Bootstrap(ModalBody))>,
      ],
      "className": "movie-modal",
      "onHide": [MockFunction],
      "show": true,
      "size": "lg",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <ForwardRef(Bootstrap(ModalTitle))
              id="movie-details"
            />,
            <Button
              click={[MockFunction]}
              label="Close"
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": undefined,
              "id": "movie-details",
            },
            "ref": null,
            "rendered": null,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": undefined,
              "propTypes": undefined,
              "render": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "click": [MockFunction],
              "label": "Close",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": undefined,
          "propTypes": undefined,
          "render": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <ForwardRef(Bootstrap(Row))>
            <ForwardRef(Bootstrap(Col))
              lg={4}
              sm={true}
            >
              <Poster
                click={[Function]}
                id={0}
                name="movie"
                url="undefined"
              />
            </ForwardRef(Bootstrap(Col))>
            <ForwardRef(Bootstrap(Col))
              lg={8}
              sm={true}
            >
              <ForwardRef(Bootstrap(Row))>
                <ForwardRef(Bootstrap(Col))
                  md={12}
                >
                  <p
                    className="h6 text-primary"
                  >
                    Overview
                  </p>
                  <p
                    className="mb-0"
                  >
                    <em />
                  </p>
                </ForwardRef(Bootstrap(Col))>
              </ForwardRef(Bootstrap(Row))>
              <div
                className="dropdown-divider"
              />
              <dl
                className="row movie-modal__summary--list"
              >
                <dt
                  className="col-sm-3 text-primary"
                >
                  Tagline
                </dt>
                <dd
                  className="col-sm-9"
                >
                  Not available
                </dd>
                <dt
                  className="col-sm-3 text-primary"
                >
                  Rating
                </dt>
                <dd
                  className="col-sm-9"
                />
                <dt
                  className="col-sm-3 text-primary"
                >
                  Status
                </dt>
                <dd
                  className="col-sm-9"
                />
                <dt
                  className="col-sm-3 text-primary"
                >
                  Release Date
                </dt>
                <dd
                  className="col-sm-9"
                />
                <dt
                  className="col-sm-3 text-primary"
                >
                  Language
                </dt>
                <dd
                  className="col-sm-9 text-uppercase"
                />
              </dl>
            </ForwardRef(Bootstrap(Col))>
          </ForwardRef(Bootstrap(Row))>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <ForwardRef(Bootstrap(Col))
                lg={4}
                sm={true}
              >
                <Poster
                  click={[Function]}
                  id={0}
                  name="movie"
                  url="undefined"
                />
              </ForwardRef(Bootstrap(Col))>,
              <ForwardRef(Bootstrap(Col))
                lg={8}
                sm={true}
              >
                <ForwardRef(Bootstrap(Row))>
                  <ForwardRef(Bootstrap(Col))
                    md={12}
                  >
                    <p
                      className="h6 text-primary"
                    >
                      Overview
                    </p>
                    <p
                      className="mb-0"
                    >
                      <em />
                    </p>
                  </ForwardRef(Bootstrap(Col))>
                </ForwardRef(Bootstrap(Row))>
                <div
                  className="dropdown-divider"
                />
                <dl
                  className="row movie-modal__summary--list"
                >
                  <dt
                    className="col-sm-3 text-primary"
                  >
                    Tagline
                  </dt>
                  <dd
                    className="col-sm-9"
                  >
                    Not available
                  </dd>
                  <dt
                    className="col-sm-3 text-primary"
                  >
                    Rating
                  </dt>
                  <dd
                    className="col-sm-9"
                  />
                  <dt
                    className="col-sm-3 text-primary"
                  >
                    Status
                  </dt>
                  <dd
                    className="col-sm-9"
                  />
                  <dt
                    className="col-sm-3 text-primary"
                  >
                    Release Date
                  </dt>
                  <dd
                    className="col-sm-9"
                  />
                  <dt
                    className="col-sm-3 text-primary"
                  >
                    Language
                  </dt>
                  <dd
                    className="col-sm-9 text-uppercase"
                  />
                </dl>
              </ForwardRef(Bootstrap(Col))>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <Poster
                  click={[Function]}
                  id={0}
                  name="movie"
                  url="undefined"
                />,
                "lg": 4,
                "sm": true,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "click": [Function],
                  "id": 0,
                  "name": "movie",
                  "url": "undefined",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "defaultProps": undefined,
                "propTypes": undefined,
                "render": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <ForwardRef(Bootstrap(Row))>
                    <ForwardRef(Bootstrap(Col))
                      md={12}
                    >
                      <p
                        className="h6 text-primary"
                      >
                        Overview
                      </p>
                      <p
                        className="mb-0"
                      >
                        <em />
                      </p>
                    </ForwardRef(Bootstrap(Col))>
                  </ForwardRef(Bootstrap(Row))>,
                  <div
                    className="dropdown-divider"
                  />,
                  <dl
                    className="row movie-modal__summary--list"
                  >
                    <dt
                      className="col-sm-3 text-primary"
                    >
                      Tagline
                    </dt>
                    <dd
                      className="col-sm-9"
                    >
                      Not available
                    </dd>
                    <dt
                      className="col-sm-3 text-primary"
                    >
                      Rating
                    </dt>
                    <dd
                      className="col-sm-9"
                    />
                    <dt
                      className="col-sm-3 text-primary"
                    >
                      Status
                    </dt>
                    <dd
                      className="col-sm-9"
                    />
                    <dt
                      className="col-sm-3 text-primary"
                    >
                      Release Date
                    </dt>
                    <dd
                      className="col-sm-9"
                    />
                    <dt
                      className="col-sm-3 text-primary"
                    >
                      Language
                    </dt>
                    <dd
                      className="col-sm-9 text-uppercase"
                    />
                  </dl>,
                ],
                "lg": 8,
                "sm": true,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": <ForwardRef(Bootstrap(Col))
                      md={12}
                    >
                      <p
                        className="h6 text-primary"
                      >
                        Overview
                      </p>
                      <p
                        className="mb-0"
                      >
                        <em />
                      </p>
                    </ForwardRef(Bootstrap(Col))>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": Array [
                        <p
                          className="h6 text-primary"
                        >
                          Overview
                        </p>,
                        <p
                          className="mb-0"
                        >
                          <em />
                        </p>,
                      ],
                      "md": 12,
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Overview",
                          "className": "h6 text-primary",
                        },
                        "ref": null,
                        "rendered": "Overview",
                        "type": "p",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <em />,
                          "className": "mb-0",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": undefined,
                          },
                          "ref": null,
                          "rendered": null,
                          "type": "em",
                        },
                        "type": "p",
                      },
                    ],
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "defaultProps": undefined,
                      "propTypes": undefined,
                      "render": [Function],
                    },
                  },
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "defaultProps": undefined,
                    "propTypes": undefined,
                    "render": [Function],
                  },
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "dropdown-divider",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <dt
                        className="col-sm-3 text-primary"
                      >
                        Tagline
                      </dt>,
                      <dd
                        className="col-sm-9"
                      >
                        Not available
                      </dd>,
                      <dt
                        className="col-sm-3 text-primary"
                      >
                        Rating
                      </dt>,
                      <dd
                        className="col-sm-9"
                      />,
                      <dt
                        className="col-sm-3 text-primary"
                      >
                        Status
                      </dt>,
                      <dd
                        className="col-sm-9"
                      />,
                      <dt
                        className="col-sm-3 text-primary"
                      >
                        Release Date
                      </dt>,
                      <dd
                        className="col-sm-9"
                      />,
                      <dt
                        className="col-sm-3 text-primary"
                      >
                        Language
                      </dt>,
                      <dd
                        className="col-sm-9 text-uppercase"
                      />,
                    ],
                    "className": "row movie-modal__summary--list",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Tagline",
                        "className": "col-sm-3 text-primary",
                      },
                      "ref": null,
                      "rendered": "Tagline",
                      "type": "dt",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Not available",
                        "className": "col-sm-9",
                      },
                      "ref": null,
                      "rendered": "Not available",
                      "type": "dd",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Rating",
                        "className": "col-sm-3 text-primary",
                      },
                      "ref": null,
                      "rendered": "Rating",
                      "type": "dt",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": undefined,
                        "className": "col-sm-9",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "dd",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Status",
                        "className": "col-sm-3 text-primary",
                      },
                      "ref": null,
                      "rendered": "Status",
                      "type": "dt",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": undefined,
                        "className": "col-sm-9",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "dd",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Release Date",
                        "className": "col-sm-3 text-primary",
                      },
                      "ref": null,
                      "rendered": "Release Date",
                      "type": "dt",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": undefined,
                        "className": "col-sm-9",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "dd",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Language",
                        "className": "col-sm-3 text-primary",
                      },
                      "ref": null,
                      "rendered": "Language",
                      "type": "dt",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": undefined,
                        "className": "col-sm-9 text-uppercase",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "dd",
                    },
                  ],
                  "type": "dl",
                },
              ],
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "defaultProps": undefined,
                "propTypes": undefined,
                "render": [Function],
              },
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": undefined,
            "propTypes": undefined,
            "render": [Function],
          },
        },
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": undefined,
          "propTypes": undefined,
          "render": [Function],
        },
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "BACKDROP_TRANSITION_DURATION": 150,
      "Body": Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": undefined,
        "propTypes": undefined,
        "render": [Function],
      },
      "Dialog": Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": undefined,
        "propTypes": undefined,
        "render": [Function],
      },
      "Footer": Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": undefined,
        "propTypes": undefined,
        "render": [Function],
      },
      "Header": Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": undefined,
        "propTypes": undefined,
        "render": [Function],
      },
      "TRANSITION_DURATION": 300,
      "Title": Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": undefined,
        "propTypes": undefined,
        "render": [Function],
      },
      "defaultProps": undefined,
      "propTypes": undefined,
      "render": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "aria-labelledby": "movie-details",
        "centered": true,
        "children": Array [
          <ForwardRef(Bootstrap(ModalHeader))>
            <ForwardRef(Bootstrap(ModalTitle))
              id="movie-details"
            />
            <Button
              click={[MockFunction]}
              label="Close"
            />
          </ForwardRef(Bootstrap(ModalHeader))>,
          <ForwardRef(Bootstrap(ModalBody))>
            <ForwardRef(Bootstrap(Row))>
              <ForwardRef(Bootstrap(Col))
                lg={4}
                sm={true}
              >
                <Poster
                  click={[Function]}
                  id={0}
                  name="movie"
                  url="undefined"
                />
              </ForwardRef(Bootstrap(Col))>
              <ForwardRef(Bootstrap(Col))
                lg={8}
                sm={true}
              >
                <ForwardRef(Bootstrap(Row))>
                  <ForwardRef(Bootstrap(Col))
                    md={12}
                  >
                    <p
                      className="h6 text-primary"
                    >
                      Overview
                    </p>
                    <p
                      className="mb-0"
                    >
                      <em />
                    </p>
                  </ForwardRef(Bootstrap(Col))>
                </ForwardRef(Bootstrap(Row))>
                <div
                  className="dropdown-divider"
                />
                <dl
                  className="row movie-modal__summary--list"
                >
                  <dt
                    className="col-sm-3 text-primary"
                  >
                    Tagline
                  </dt>
                  <dd
                    className="col-sm-9"
                  >
                    Not available
                  </dd>
                  <dt
                    className="col-sm-3 text-primary"
                  >
                    Rating
                  </dt>
                  <dd
                    className="col-sm-9"
                  />
                  <dt
                    className="col-sm-3 text-primary"
                  >
                    Status
                  </dt>
                  <dd
                    className="col-sm-9"
                  />
                  <dt
                    className="col-sm-3 text-primary"
                  >
                    Release Date
                  </dt>
                  <dd
                    className="col-sm-9"
                  />
                  <dt
                    className="col-sm-3 text-primary"
                  >
                    Language
                  </dt>
                  <dd
                    className="col-sm-9 text-uppercase"
                  />
                </dl>
              </ForwardRef(Bootstrap(Col))>
            </ForwardRef(Bootstrap(Row))>
          </ForwardRef(Bootstrap(ModalBody))>,
        ],
        "className": "movie-modal",
        "onHide": [MockFunction],
        "show": true,
        "size": "lg",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <ForwardRef(Bootstrap(ModalTitle))
                id="movie-details"
              />,
              <Button
                click={[MockFunction]}
                label="Close"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": undefined,
                "id": "movie-details",
              },
              "ref": null,
              "rendered": null,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "defaultProps": undefined,
                "propTypes": undefined,
                "render": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "click": [MockFunction],
                "label": "Close",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": undefined,
            "propTypes": undefined,
            "render": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <ForwardRef(Bootstrap(Row))>
              <ForwardRef(Bootstrap(Col))
                lg={4}
                sm={true}
              >
                <Poster
                  click={[Function]}
                  id={0}
                  name="movie"
                  url="undefined"
                />
              </ForwardRef(Bootstrap(Col))>
              <ForwardRef(Bootstrap(Col))
                lg={8}
                sm={true}
              >
                <ForwardRef(Bootstrap(Row))>
                  <ForwardRef(Bootstrap(Col))
                    md={12}
                  >
                    <p
                      className="h6 text-primary"
                    >
                      Overview
                    </p>
                    <p
                      className="mb-0"
                    >
                      <em />
                    </p>
                  </ForwardRef(Bootstrap(Col))>
                </ForwardRef(Bootstrap(Row))>
                <div
                  className="dropdown-divider"
                />
                <dl
                  className="row movie-modal__summary--list"
                >
                  <dt
                    className="col-sm-3 text-primary"
                  >
                    Tagline
                  </dt>
                  <dd
                    className="col-sm-9"
                  >
                    Not available
                  </dd>
                  <dt
                    className="col-sm-3 text-primary"
                  >
                    Rating
                  </dt>
                  <dd
                    className="col-sm-9"
                  />
                  <dt
                    className="col-sm-3 text-primary"
                  >
                    Status
                  </dt>
                  <dd
                    className="col-sm-9"
                  />
                  <dt
                    className="col-sm-3 text-primary"
                  >
                    Release Date
                  </dt>
                  <dd
                    className="col-sm-9"
                  />
                  <dt
                    className="col-sm-3 text-primary"
                  >
                    Language
                  </dt>
                  <dd
                    className="col-sm-9 text-uppercase"
                  />
                </dl>
              </ForwardRef(Bootstrap(Col))>
            </ForwardRef(Bootstrap(Row))>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <ForwardRef(Bootstrap(Col))
                  lg={4}
                  sm={true}
                >
                  <Poster
                    click={[Function]}
                    id={0}
                    name="movie"
                    url="undefined"
                  />
                </ForwardRef(Bootstrap(Col))>,
                <ForwardRef(Bootstrap(Col))
                  lg={8}
                  sm={true}
                >
                  <ForwardRef(Bootstrap(Row))>
                    <ForwardRef(Bootstrap(Col))
                      md={12}
                    >
                      <p
                        className="h6 text-primary"
                      >
                        Overview
                      </p>
                      <p
                        className="mb-0"
                      >
                        <em />
                      </p>
                    </ForwardRef(Bootstrap(Col))>
                  </ForwardRef(Bootstrap(Row))>
                  <div
                    className="dropdown-divider"
                  />
                  <dl
                    className="row movie-modal__summary--list"
                  >
                    <dt
                      className="col-sm-3 text-primary"
                    >
                      Tagline
                    </dt>
                    <dd
                      className="col-sm-9"
                    >
                      Not available
                    </dd>
                    <dt
                      className="col-sm-3 text-primary"
                    >
                      Rating
                    </dt>
                    <dd
                      className="col-sm-9"
                    />
                    <dt
                      className="col-sm-3 text-primary"
                    >
                      Status
                    </dt>
                    <dd
                      className="col-sm-9"
                    />
                    <dt
                      className="col-sm-3 text-primary"
                    >
                      Release Date
                    </dt>
                    <dd
                      className="col-sm-9"
                    />
                    <dt
                      className="col-sm-3 text-primary"
                    >
                      Language
                    </dt>
                    <dd
                      className="col-sm-9 text-uppercase"
                    />
                  </dl>
                </ForwardRef(Bootstrap(Col))>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <Poster
                    click={[Function]}
                    id={0}
                    name="movie"
                    url="undefined"
                  />,
                  "lg": 4,
                  "sm": true,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "click": [Function],
                    "id": 0,
                    "name": "movie",
                    "url": "undefined",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "defaultProps": undefined,
                  "propTypes": undefined,
                  "render": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    <ForwardRef(Bootstrap(Row))>
                      <ForwardRef(Bootstrap(Col))
                        md={12}
                      >
                        <p
                          className="h6 text-primary"
                        >
                          Overview
                        </p>
                        <p
                          className="mb-0"
                        >
                          <em />
                        </p>
                      </ForwardRef(Bootstrap(Col))>
                    </ForwardRef(Bootstrap(Row))>,
                    <div
                      className="dropdown-divider"
                    />,
                    <dl
                      className="row movie-modal__summary--list"
                    >
                      <dt
                        className="col-sm-3 text-primary"
                      >
                        Tagline
                      </dt>
                      <dd
                        className="col-sm-9"
                      >
                        Not available
                      </dd>
                      <dt
                        className="col-sm-3 text-primary"
                      >
                        Rating
                      </dt>
                      <dd
                        className="col-sm-9"
                      />
                      <dt
                        className="col-sm-3 text-primary"
                      >
                        Status
                      </dt>
                      <dd
                        className="col-sm-9"
                      />
                      <dt
                        className="col-sm-3 text-primary"
                      >
                        Release Date
                      </dt>
                      <dd
                        className="col-sm-9"
                      />
                      <dt
                        className="col-sm-3 text-primary"
                      >
                        Language
                      </dt>
                      <dd
                        className="col-sm-9 text-uppercase"
                      />
                    </dl>,
                  ],
                  "lg": 8,
                  "sm": true,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": <ForwardRef(Bootstrap(Col))
                        md={12}
                      >
                        <p
                          className="h6 text-primary"
                        >
                          Overview
                        </p>
                        <p
                          className="mb-0"
                        >
                          <em />
                        </p>
                      </ForwardRef(Bootstrap(Col))>,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": Array [
                          <p
                            className="h6 text-primary"
                          >
                            Overview
                          </p>,
                          <p
                            className="mb-0"
                          >
                            <em />
                          </p>,
                        ],
                        "md": 12,
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "Overview",
                            "className": "h6 text-primary",
                          },
                          "ref": null,
                          "rendered": "Overview",
                          "type": "p",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <em />,
                            "className": "mb-0",
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": undefined,
                            },
                            "ref": null,
                            "rendered": null,
                            "type": "em",
                          },
                          "type": "p",
                        },
                      ],
                      "type": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "defaultProps": undefined,
                        "propTypes": undefined,
                        "render": [Function],
                      },
                    },
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "defaultProps": undefined,
                      "propTypes": undefined,
                      "render": [Function],
                    },
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "dropdown-divider",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <dt
                          className="col-sm-3 text-primary"
                        >
                          Tagline
                        </dt>,
                        <dd
                          className="col-sm-9"
                        >
                          Not available
                        </dd>,
                        <dt
                          className="col-sm-3 text-primary"
                        >
                          Rating
                        </dt>,
                        <dd
                          className="col-sm-9"
                        />,
                        <dt
                          className="col-sm-3 text-primary"
                        >
                          Status
                        </dt>,
                        <dd
                          className="col-sm-9"
                        />,
                        <dt
                          className="col-sm-3 text-primary"
                        >
                          Release Date
                        </dt>,
                        <dd
                          className="col-sm-9"
                        />,
                        <dt
                          className="col-sm-3 text-primary"
                        >
                          Language
                        </dt>,
                        <dd
                          className="col-sm-9 text-uppercase"
                        />,
                      ],
                      "className": "row movie-modal__summary--list",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Tagline",
                          "className": "col-sm-3 text-primary",
                        },
                        "ref": null,
                        "rendered": "Tagline",
                        "type": "dt",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Not available",
                          "className": "col-sm-9",
                        },
                        "ref": null,
                        "rendered": "Not available",
                        "type": "dd",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Rating",
                          "className": "col-sm-3 text-primary",
                        },
                        "ref": null,
                        "rendered": "Rating",
                        "type": "dt",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": undefined,
                          "className": "col-sm-9",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": "dd",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Status",
                          "className": "col-sm-3 text-primary",
                        },
                        "ref": null,
                        "rendered": "Status",
                        "type": "dt",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": undefined,
                          "className": "col-sm-9",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": "dd",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Release Date",
                          "className": "col-sm-3 text-primary",
                        },
                        "ref": null,
                        "rendered": "Release Date",
                        "type": "dt",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": undefined,
                          "className": "col-sm-9",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": "dd",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Language",
                          "className": "col-sm-3 text-primary",
                        },
                        "ref": null,
                        "rendered": "Language",
                        "type": "dt",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": undefined,
                          "className": "col-sm-9 text-uppercase",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": "dd",
                      },
                    ],
                    "type": "dl",
                  },
                ],
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "defaultProps": undefined,
                  "propTypes": undefined,
                  "render": [Function],
                },
              },
            ],
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": undefined,
              "propTypes": undefined,
              "render": [Function],
            },
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": undefined,
            "propTypes": undefined,
            "render": [Function],
          },
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "BACKDROP_TRANSITION_DURATION": 150,
        "Body": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": undefined,
          "propTypes": undefined,
          "render": [Function],
        },
        "Dialog": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": undefined,
          "propTypes": undefined,
          "render": [Function],
        },
        "Footer": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": undefined,
          "propTypes": undefined,
          "render": [Function],
        },
        "Header": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": undefined,
          "propTypes": undefined,
          "render": [Function],
        },
        "TRANSITION_DURATION": 300,
        "Title": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": undefined,
          "propTypes": undefined,
          "render": [Function],
        },
        "defaultProps": undefined,
        "propTypes": undefined,
        "render": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
